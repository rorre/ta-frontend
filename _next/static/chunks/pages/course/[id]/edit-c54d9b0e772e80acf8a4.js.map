{"version":3,"file":"static/chunks/pages/course/[id]/edit-c54d9b0e772e80acf8a4.js","mappings":"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","sources":["webpack://_N_E/./components/Loader.tsx","webpack://_N_E/./components/creator/Fields.tsx","webpack://_N_E/./components/creator/Editor.tsx","webpack://_N_E/./pages/course/[id]/edit.tsx","webpack://_N_E/?11be"],"sourcesContent":["import LoadingAnimation from 'react-loader-spinner'\n\nexport default function Loader() {\n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen py-2\">\n            <LoadingAnimation type=\"TailSpin\" color=\"#2563eb\" height={100} width={100} />\n        </div>\n    )\n}\n","import { ErrorMessage } from '@hookform/error-message'\nimport {\n    Control,\n    Controller,\n    DeepMap,\n    FieldError,\n    FieldValues,\n    RegisterOptions,\n    UseFormRegister,\n} from 'react-hook-form'\nimport { StylesConfig } from 'react-select'\n\n// I have absolutely no idea why does this happen.\n// At least I am not the only one that has this problem.\n// Issue: https://github.com/vercel/next.js/issues/4515\n// Solution: https://github.com/vercel/next.js/issues/4515#issuecomment-706273622\nimport dynamic from 'next/dynamic'\nimport type SelectType from 'react-select'\nimport { InputHTMLAttributes } from 'react'\nconst Select = dynamic(() => import('react-select'), {\n    ssr: false,\n}) as typeof SelectType\n\ninterface SelectOptions {\n    value: string\n    label: string\n}\n\ntype isMulti = false\n\ninterface FormFieldProps extends InputHTMLAttributes<HTMLInputElement> {\n    id: string\n    label: string\n    placeholderText: string\n    type?: string\n    register: UseFormRegister<any>\n    errors: DeepMap<FieldValues, FieldError>\n    validators?: RegisterOptions\n    useErrorMessage?: boolean\n}\n\nconst selectStyle: StylesConfig<SelectOptions, isMulti> = {\n    control: (styles) => ({\n        ...styles,\n        backgroundColor: 'transparent',\n        borderWidth: '1px',\n        borderBottomWidth: '1px',\n        boxShadow: 'none',\n        margin: 0,\n        minHeight: 0,\n        borderRadius: '0.25rem',\n        paddingLeft: '0.75rem',\n    }),\n    menuList: (styles) => ({\n        ...styles,\n        paddingTop: 0,\n        paddingBottom: 0,\n    }),\n    placeholder: (styles, state) => ({\n        ...styles,\n        color: state.hasValue ? '#773b6b' : 'hsl(0, 0%, 50%)',\n    }),\n    valueContainer: (styles) => ({\n        ...styles,\n        padding: 0,\n        paddingTop: '0.5rem',\n        paddingBottom: '0.5rem',\n    }),\n}\n\ninterface SelectFieldProps {\n    id: string\n    label: string\n    placeholderText: string\n    errors: DeepMap<FieldValues, FieldError>\n    control: Control<any>\n    options: SelectOptions[]\n    validators?: RegisterOptions\n    useErrorMessage?: boolean\n}\n\ninterface ErrorProps {\n    message: string\n}\n\nconst ErrorNotification: React.FC<ErrorProps> = ({ message }) => {\n    return <span className=\"pt-2 text-red-600\">{message}</span>\n}\n\nconst FormField: React.FC<FormFieldProps> = ({\n    id,\n    label,\n    placeholderText,\n    register,\n    validators,\n    errors,\n    type = 'text',\n    useErrorMessage = true,\n    ...props\n}) => {\n    return (\n        <div className=\"mb-4 md:mr-2 md:mb-0\">\n            <label className=\"block text-gray-700 font-bold mb-2\" htmlFor={id}>\n                {label}\n            </label>\n\n            <input\n                {...register(id, validators)}\n                className=\"appearance-none border rounded w-full\n                            py-2 px-3 text-gray-700 leading-tight\n                            focus:outline-none hover:shadow focus:border-blue-600\"\n                id={id}\n                type={type}\n                placeholder={placeholderText}\n                autoComplete=\"off\"\n                {...props}\n            />\n            {useErrorMessage && <ErrorMessage name={id} errors={errors} render={ErrorNotification} />}\n        </div>\n    )\n}\n\nconst SelectField: React.FC<SelectFieldProps> = ({\n    id,\n    label,\n    placeholderText,\n    control,\n    validators,\n    options,\n    errors,\n    useErrorMessage = true,\n}) => {\n    return (\n        <div className=\"mb-4 md:mr-2 md:mb-0\">\n            <label className=\"block text-gray-700 font-bold mb-2\" htmlFor={id}>\n                {label}\n            </label>\n\n            <Controller\n                name={id}\n                control={control}\n                render={({ field: { onChange, value, name, ref } }) => (\n                    <Select\n                        // @ts-ignore\n                        inputRef={ref}\n                        value={options.find((c) => c.value === value)}\n                        name={name}\n                        id={id}\n                        instanceId={id}\n                        options={options}\n                        placeholder={placeholderText}\n                        isSearchable={false}\n                        onChange={(val) => onChange(val?.value)}\n                        styles={selectStyle}\n                        className=\"text-base\"\n                    />\n                )}\n                rules={validators}\n            />\n\n            {useErrorMessage && <ErrorMessage name={id} errors={errors} render={ErrorNotification} />}\n        </div>\n    )\n}\n\nconst FieldRow: React.FC = ({ children }) => {\n    return (\n        <div\n            className=\"grid md:grid-cols-2\n                      gap-x-2 md:gap-y-1\n                      items-center\n                      md:gap-x-4 lg:gap-x-24 lg:gap-y-4\"\n        >\n            {children}\n        </div>\n    )\n}\n\nexport { FormField, SelectField, FieldRow }\n","import axios from 'axios'\nimport { useRouter } from 'next/router'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport toast from 'react-hot-toast'\nimport { KeyedMutator } from 'swr'\nimport { Course } from '../../utils/types'\nimport { FieldRow, FormField, SelectField } from './Fields'\n\ninterface CourseEditInputs {\n    name: string\n    matkul: string\n    datetime: string\n    students_limit: Number | null\n    notes: string | null\n    link: string | null\n    notes_short: string | null\n    hidden: boolean\n}\n\ninterface EditorProps {\n    course?: Course | null\n    mutator?: KeyedMutator<any>\n}\n\nconst matkulOpts = [\n    {\n        label: 'DDP',\n        value: 'ddp',\n    },\n    {\n        label: 'MatDis',\n        value: 'matdis',\n    },\n    {\n        label: 'Kalkulus',\n        value: 'kalkulus',\n    },\n    {\n        label: 'PSD',\n        value: 'psd',\n    },\n    {\n        label: 'ManBis',\n        value: 'manbis',\n    },\n    {\n        label: 'Kombistek',\n        value: 'kombistek',\n    },\n    {\n        label: 'Other',\n        value: 'other',\n    },\n]\n\nconst Editor: React.FC<EditorProps> = ({ course = null, mutator = null }) => {\n    if (course) {\n        matkulOpts.forEach((element) => {\n            if (element.label == course.matkul) course.matkul = element.value\n        })\n    }\n\n    const {\n        control,\n        register,\n        formState: { errors },\n        handleSubmit,\n    } = useForm<CourseEditInputs>({ defaultValues: course })\n    const router = useRouter()\n    const submitValue: SubmitHandler<CourseEditInputs> = (data) => {\n        // @ts-ignore\n        if (data.students_limit === '') data.students_limit = null\n\n        let targetUrl\n        if (course) {\n            targetUrl = `${process.env.NEXT_PUBLIC_API_URL}/course/${course.id}/update`\n        } else {\n            targetUrl = `${process.env.NEXT_PUBLIC_API_URL}/course/create`\n        }\n        toast\n            .promise(axios.post(targetUrl, data, { withCredentials: true }), {\n                loading: 'Submitting course...',\n                success: 'Submitted!',\n                error: (err) => {\n                    if (err.response) {\n                        return err.response.data.detail\n                    } else {\n                        return 'An error has occured.'\n                    }\n                },\n            })\n            .then(() => {\n                router.push('/course')\n                if (mutator) mutator()\n            })\n            .catch(() => {})\n    }\n\n    return (\n        <>\n            <div className=\"bg-blue-600 text-white rounded-md border border-white p-4 mb-4\">\n                <h3 className=\"text-lg font-bold\">Notes</h3>\n                <div>\n                    <ul className=\"list-disc ml-8\">\n                        <li>You may only have two upcoming classes at the same time.</li>\n                        <li>\n                            You can use markdown to format notes. If you don&apos;t know what that is,{' '}\n                            <a\n                                className=\"hover:text-gray-300 underline\"\n                                href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\"\n                            >\n                                you can read the cheat sheet here\n                            </a>\n                            .\n                        </li>\n                        <li>\n                            Short notes will be shown in course cards in listing. Use this to put limitations or topic\n                            info such as &quot;DDP-B only&quot; or &quot;Topic will be Python Function&quot;.\n                        </li>\n                        <li>\n                            Hiding course will hide your course from Available Course listing, share the Course ID to\n                            your students so they can use it to enroll.\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <form onSubmit={handleSubmit(submitValue)} className=\"md:flex flex-col space-y-3\">\n                <FieldRow>\n                    <FormField\n                        id=\"name\"\n                        label=\"Course Name\"\n                        placeholderText=\"\"\n                        register={register}\n                        validators={{\n                            required: {\n                                value: true,\n                                message: 'You need to provide a name.',\n                            },\n                            maxLength: {\n                                value: 100,\n                                message: 'Course name exceeds 100 characters.',\n                            },\n                        }}\n                        errors={errors}\n                        useErrorMessage={true}\n                    />\n\n                    <SelectField\n                        id=\"matkul\"\n                        label=\"Subject\"\n                        placeholderText=\"\"\n                        options={matkulOpts}\n                        control={control}\n                        errors={errors}\n                        validators={{\n                            required: {\n                                value: true,\n                                message: 'You need to fill in the subject.',\n                            },\n                        }}\n                        useErrorMessage={true}\n                    />\n                </FieldRow>\n                <FieldRow>\n                    <FormField\n                        id=\"datetime\"\n                        label=\"Date and Time\"\n                        placeholderText=\"When will the course starts?\"\n                        register={register}\n                        validators={{\n                            required: {\n                                value: true,\n                                message: 'You need to provide the date and time.',\n                            },\n                        }}\n                        type=\"datetime-local\"\n                        errors={errors}\n                        useErrorMessage={true}\n                    />\n\n                    <FormField\n                        id=\"students_limit\"\n                        label=\"Student Limit\"\n                        placeholderText=\"You may set to 0 for no limit.\"\n                        register={register}\n                        type=\"number\"\n                        validators={{\n                            min: 0,\n                        }}\n                        errors={errors}\n                        useErrorMessage={true}\n                        min={0}\n                    />\n                </FieldRow>\n                <FormField\n                    id=\"link\"\n                    label=\"Meet/Zoom URL\"\n                    placeholderText=\"\"\n                    register={register}\n                    errors={errors}\n                    useErrorMessage={false}\n                />\n                <FormField\n                    id=\"notes_short\"\n                    label=\"Short Notes\"\n                    placeholderText=\"\"\n                    register={register}\n                    errors={errors}\n                    validators={{\n                        maxLength: {\n                            value: 100,\n                            message: 'Short notes exceeds 100 characters.',\n                        },\n                    }}\n                    useErrorMessage={true}\n                />\n\n                <div className=\"mb-4 md:mr-2 md:mb-0\">\n                    <label className=\"block text-gray-700 font-bold mb-2\" htmlFor=\"notes\">\n                        Notes\n                    </label>\n\n                    <textarea\n                        {...register('notes')}\n                        className=\"appearance-none border rounded w-full\n                            py-2 px-3 text-gray-700 leading-tight\n                            focus:outline-none hover:shadow focus:border-blue-600\"\n                        id=\"notes\"\n                        placeholder=\"Notes to be posted on site. Markdown supported.\"\n                    />\n                </div>\n                <div className=\"flex flex-row space-x-2 items-center mb-4 md:mr-2 md:mb-0\">\n                    <input\n                        {...register('hidden')}\n                        className=\"form-checkbox border rounded\n                            h-4 w-4 text-gray-700 leading-tight\n                            focus:outline-none hover:shadow focus:border-blue-600 hover:cursor-pointer\"\n                        id=\"hidden\"\n                        type=\"checkbox\"\n                    />\n                    <span className=\"text-gray-700 font-bold\">Hidden Course</span>\n                </div>\n                <button type=\"submit\" className=\"w-full rounded-xl bg-blue-600 p-2 text-white\">\n                    Submit\n                </button>\n            </form>\n        </>\n    )\n}\n\nexport default Editor\n","import { useRouter } from 'next/router'\nimport Editor from '../../../components/creator/Editor'\nimport Loader from '../../../components/Loader'\nimport { useCourse, useUser } from '../../../utils/fetchers'\nimport toast from 'react-hot-toast'\nimport { useEffect } from 'react'\nimport { NextSeo } from 'next-seo'\n\nconst EditCourse = () => {\n    const router = useRouter()\n    const { user } = useUser()\n    const { id } = router.query\n    const { course, error, notFound, isLoading, mutate, errorMessage } = useCourse(id as string)\n\n    useEffect(() => {\n        if (error && id !== undefined) {\n            toast.error(errorMessage)\n            router.replace('/course')\n        }\n    }, [course, error])\n\n    useEffect(() => {\n        if (course && user) {\n            if (course.teacher_npm != user.npm && !user.is_admin) {\n                toast.error('You are not allowed to do so.')\n                router.replace('/course')\n            }\n        }\n    }, [course, user])\n\n    if (notFound && id !== undefined) {\n        router.replace('/course')\n        toast.error('Course not found.')\n    }\n\n    return isLoading || !course ? (\n        <Loader />\n    ) : (\n        <>\n            <NextSeo title=\"Edit Course\" />\n            <h2 className=\"font-bold text-2xl pb-2\">Edit Course</h2>\n            <hr className=\"pb-2\" />\n            <Editor course={course} mutator={mutate} />\n        </>\n    )\n}\n\nexport default EditCourse\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/course/[id]/edit\",\n      function () {\n        return require(\"private-next-pages/course/[id]/edit.tsx\");\n      }\n    ]);\n  "],"names":["Loader","className","type","color","height","width","Select","dynamic","ssr","selectStyle","control","styles","backgroundColor","borderWidth","borderBottomWidth","boxShadow","margin","minHeight","borderRadius","paddingLeft","menuList","paddingTop","paddingBottom","placeholder","state","hasValue","valueContainer","padding","ErrorNotification","message","FormField","id","label","placeholderText","register","validators","errors","useErrorMessage","props","htmlFor","autoComplete","name","render","SelectField","options","field","onChange","value","ref","inputRef","find","c","instanceId","isSearchable","val","rules","FieldRow","children","matkulOpts","course","mutator","forEach","element","matkul","useForm","defaultValues","formState","handleSubmit","router","useRouter","href","onSubmit","data","targetUrl","students_limit","process","toast","axios","withCredentials","loading","success","error","err","response","detail","then","push","required","maxLength","min","user","useUser","query","useCourse","notFound","isLoading","mutate","errorMessage","useEffect","undefined","replace","teacher_npm","npm","is_admin","title","window","__NEXT_P"],"sourceRoot":""}